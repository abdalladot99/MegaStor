@model AdminDashboardViewModel
@using System.Text.Json

@{
    ViewData["Title"] = "Admin Dashboard";
  
  

    var counts = $"{Model.TotalProducts},{Model.TotalCustomers},{Model.TotalSellers},{Model.TotalMainAdmin}";

    var catData = $"{Model.TotalCategories},{Model.totalSubCategories}";

}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
<style>
    .nav-tabs {
        background-color: #f6f9fc;
        padding: 8px;
        border-radius: 8px;
        display: flex;
        gap: 8px;
        border: none;
    }

        .nav-tabs .nav-link {
            color: #5a5a5a;
            background-color: transparent;
            border: none;
            border-radius: 6px;
            padding: 8px 16px;
            font-weight: 500;
            text-decoration: none;
            transition: background-color 0.3s;
        }

            .nav-tabs .nav-link.active {
                background-color: #ffffff;
                color: #000;
                border: 1px solid #ddd;
                box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
            }
</style>
<div class="container py-4">
    <h2 class="mb-4 text-center fw-bold">Admin Dashboard</h2>

    <div class="container-fluid row">
         <div class="col mb-4">
            <div class="col-12">
                <div class="card shadow-sm p-3">
                    <h6 class="text-center mb-3">Monthly Sales & Orders</h6>
                    <canvas id="salesOrdersChart" height="450"></canvas>
                </div>
            </div>
        </div>

        <div class="col mb-4">
            <div class="col-12 mb-4">
                <div class="card shadow-sm p-3">
                    <h6 class="text-center mb-3">System Statistics</h6>
                    <canvas id="combinedChart" height="450"></canvas>
                </div>
            </div>
        </div>

    </div>


    <script>
        // 1- بيانات الرسم البياني للمبيعات والطلبات الشهرية

        const monthLabels = @Html.Raw(JsonSerializer.Serialize(Model.MonthLabels ?? new List<string>()));
        const monthlySales = @Html.Raw(JsonSerializer.Serialize(Model.MonthlySales ?? new List<decimal>()));
        const monthlyOrders = @Html.Raw(JsonSerializer.Serialize(Model.MonthlyOrders ?? new List<int>()));

        const ctxSalesOrders = document.getElementById('salesOrdersChart').getContext('2d');
        const salesOrdersChart = new Chart(ctxSalesOrders, {
            type: 'line',
            data: {
                labels: monthLabels,
                datasets: [
                    {
                        label: 'Monthly Sales',
                        data: monthlySales,
                        borderColor: 'rgba(54, 162, 235, 1)',
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        tension: 0.3
                    },
                    {
                        label: 'Monthly Orders',
                        data: monthlyOrders,
                        borderColor: 'rgba(255, 99, 132, 1)',
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        tension: 0.3
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'Monthly Sales & Orders'
                    }
                }
            }
        });

              const ctxCombined = document.getElementById('combinedChart').getContext('2d');
        const combinedChart = new Chart(ctxCombined, {
            type: 'bar',
            data: {
                labels: [
                    'Products', 'Customers', 'Sellers',"MainAdmin",
                    'Main Categories', 'Sub Categories'
                ],
                datasets: [{
                    label: 'Counts',
                    data: [
                        @Model.TotalProducts,
                        @Model.TotalCustomers,
                        @Model.TotalSellers,
                        @Model.TotalMainAdmin,
                        @Model.TotalCategories,
                        @Model.totalSubCategories
                    ],
                    backgroundColor: [
                        '#4caf50', '#2196f3', '#ff9800',"#2e7d32",
                        '#03a9f4', '#8bc34a'
                    ]
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'Overall System Statistics'
                    },
                    legend: {
                        display: false
                    }
                }
            }
        });

    </script>
     
 
    <div class="card mt-5 shadow-sm">
        <div class="card-body text-center">
            <h4 class="fw-bold">Sales Summary</h4>
            <p class="text-muted">Total sales and orders for the current month</p>

            <div class="row mt-4">
                <div class="col-md-4">
                    <div class="fs-6 text-muted">Total Sales</div>
                    <h3 class="text-success">
                        @Model.TotalSales.ToString("C0", new System.Globalization.CultureInfo("en-US"))
                    </h3>
                    <small class="text-success">↑ @Model.SalesGrowth% compared to last month</small>
                </div>
                <div class="col-md-4">
                    <div class="fs-6 text-muted">Total Orders</div>
                    <h3 class="text-success">@Model.TotalOrders</h3>
                    <small class="text-success">↑ @Model.OrdersGrowth% compared to last month</small>
                </div>
                <div class="col-md-4">
                    <div class="fs-6 text-muted">Avg Order Value</div>
                    <h3 class="text-success">
                        @Model.AverageOrderValue.ToString("C0", new System.Globalization.CultureInfo("en-US"))
                    </h3>
                    <small class="text-success">↑ @Model.AverageOrderGrowth% compared to last month</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Navigation Tabs -->
 		<ul class="nav nav-tabs mt-5 row " id="dashboardTabs">
            <li class="nav-item col">
				<a class="nav-link active" href="#" data-target="products-tab">
					<i class="bi bi-box"></i> Products
				</a>
			</li>
            <li class="nav-item col">
				<a class="nav-link" href="#" data-target="categories-tab">
					<i class="bi bi-tags"></i> Categories
				</a>
			</li>
            <li class="nav-item col">
				<a class="nav-link" href="#" data-target="users-tab">
					<i class="bi bi-person"></i> Users
				</a>
			</li>
            <li class="nav-item col">
				<a class="nav-link" href="#" data-target="orders-tab">
					<i class="bi bi-cart-check"></i> Orders
				</a>
			</li>
		</ul>

    
    <!-- Dynamic Tab Content -->
    <div class="mt-4">

        <!-- Products Section -->
        <div id="products-tab" class="tab-content-section" style="display:block;min-height:400px">
            @await Component.InvokeAsync("ProductsSection")
        </div>


        <!-- Categories Section -->
        <div id="categories-tab" class="tab-content-section" style="display:none;min-height:400px">
            @await Component.InvokeAsync("CategorieSection")
        </div>

        <!-- Users Section -->
        <div id="users-tab" class="tab-content-section" style="display:none;min-height:400px">
            @await Component.InvokeAsync("UsersSection")
        </div>

        <!-- Orders Section -->
        <div id="orders-tab" class="tab-content-section" style="display:none;min-height:400px">
            @await Component.InvokeAsync("OrdersSection")
        </div>
    </div>
</div>

<!-- JavaScript for Tabs and Actions -->
<script>
    document.querySelectorAll('#dashboardTabs .nav-link').forEach(tab => {
        tab.addEventListener('click', function (e) {
            e.preventDefault();

            // Remove active class from all tabs
            document.querySelectorAll('#dashboardTabs .nav-link').forEach(t => t.classList.remove('active'));

            // Add active to the clicked tab
            this.classList.add('active');

            // Hide all tab content sections
            document.querySelectorAll('.tab-content-section').forEach(section => section.style.display = 'none');

            // Show the target tab
            const targetId = this.getAttribute('data-target');
            document.getElementById(targetId).style.display = 'block';
        });
    });
</script>


 
 